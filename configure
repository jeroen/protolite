# Anticonf (tm) script by Jeroen Ooms (2022)
# This script will query 'pkg-config' for the required cflags and ldflags.
# If pkg-config is unavailable or does not find the library, try setting
# INCLUDE_DIR and LIB_DIR manually via e.g:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

# Library settings
PKG_CONFIG_NAME="protobuf"
PKG_DEB_NAME="libprotobuf-dev"
PKG_RPM_NAME="protobuf-devel"
PKG_BREW_NAME="protobuf"
PKG_TEST_HEADER="<google/protobuf/message.h>"
PKG_LIBS="-lprotobuf"
PKG_CFLAGS=""

# Use pkg-config if available (except for on CRAN)
if [ `command -v pkg-config` ]; then
  PKGCONFIG_CFLAGS=`pkg-config --cflags --silence-errors ${PKG_CONFIG_NAME}`
  PKGCONFIG_LIBS=`pkg-config --libs ${PKG_CONFIG_NAME}`
  PKGCONFIG_MODVERSION=`pkg-config --modversion --silence-errors ${PKG_CONFIG_NAME}`
fi

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS" ] || [ "$PKGCONFIG_LIBS" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS=${PKGCONFIG_CFLAGS}
  PKG_LIBS=${PKGCONFIG_LIBS}
elif [ `uname` = "Darwin" ]; then
  test ! "$CI" && brew --version 2>/dev/null
  if [ $? -eq 0 ]; then
    BREWDIR=`brew --prefix`
    PATH="$BREWDIR/bin:$PATH"
    PKG_CFLAGS="-I$BREWDIR/include"
    PKG_LIBS="-L$BREWDIR/lib $PKG_LIBS"
  else
    curl -sfL "https://autobrew.github.io/scripts/protobuf" > autobrew
    . ./autobrew
  fi
fi

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Use CXX17 if available (preferred for recent libprotobuf)
CXX17=`${R_HOME}/bin/R CMD config CXX17` || unset CXX17

if [ "$CXX17" ]; then
CXX="$CXX17 `${R_HOME}/bin/R CMD config CXX17STD`"
CXXFLAGS=`${R_HOME}/bin/R CMD config CXX17FLAGS`
echo "Found C++17 compiler: $CXX $CXXFLAGS"
else
CXX=`${R_HOME}/bin/R CMD config CXX`
CXXFLAGS=`${R_HOME}/bin/R CMD config CXXFLAGS`
echo "Using default C++ compiler: $CXX $CXXFLAGS"
fi

# Test configuration
CPPFLAGS=`${R_HOME}/bin/R CMD config CPPFLAGS`
echo "#include $PKG_TEST_HEADER" | ${CXX} -E ${CPPFLAGS} ${PKG_CFLAGS} ${CXXFLAGS} -xc++ - >/dev/null 2>configure.log

# Customize the error
if [ $? -ne 0 ]; then
  echo "------------------------------[ ANTICONF ]-----------------------------"
  echo "Configuration failed to find $PKG_CONFIG_NAME. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu, etc)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, EPEL)"
  echo " * brew: $PKG_BREW_NAME (OSX)"
  echo "If $PKG_CONFIG_NAME is already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains a $PKG_CONFIG_NAME.pc file. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  echo "----------------------------[ ERROR MESSAGE ]----------------------------"
  cat configure.log
  echo "------------------------------------------------------------------------"
  exit 1
fi

# Fix for deprecated declarations
if pkg-config ${PKG_CONFIG_NAME} --atleast-version 3.6; then
PKG_CFLAGS="$PKG_CFLAGS -DUSENEWAPI"
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Look for 'protoc' compiler
if [ `command -v protoc` ]; then
  PROTOC_VERSION=`protoc --version`
  echo "Using ${PROTOC_VERSION} from `command -v protoc`"
else
  echo "Failed to run protoc."
  echo "Please install the 'protobuf-compiler' package for your system."
  exit 1
fi

# Try to check if protoc version matches libproto
case $PROTOC_VERSION in
  *"$PKGCONFIG_MODVERSION"*)
    ;;
  *)
    echo "Warning: protoc version $PROTOC_VERSION might not match libproto version $PKGCONFIG_MODVERSION.";
    ;;
esac

# Compile proto file
cd src
protoc *.proto --cpp_out=.
if [ $? -ne 0 ]; then
  echo "Error: failed to compile proto files."
  exit 1
fi

# Suppress wanrings about pragmas in the autogenerated protobuf headers.
# Uwe + BDR have said this is OK and there is nothing we can do about this.
sed -i.bak "s@  #pragma@/*nowarn*/#pragma@g" *.pb.h || true
rm -f *.bak

# Success
exit 0
